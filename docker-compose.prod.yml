version: '3.8'

services:
  # 前端服务 (生产环境)
  frontend:
    build:
      context: ./Generate
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=production
      - VUE_APP_API_BASE_URL=https://api.fabricagenerate.com
      - VUE_APP_WEBSOCKET_URL=wss://api.fabricagenerate.com
    networks:
      - fabrica-network
    restart: unless-stopped
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

  # 后端服务 (生产环境)
  backend:
    build:
      context: ./fabrica-backend
      dockerfile: Dockerfile
      target: production
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://fabrica_user:${POSTGRES_PASSWORD}@postgres:5432/fabrica_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=24h
      - BCRYPT_ROUNDS=12
      - CORS_ORIGIN=https://fabricagenerate.com
      - FILE_UPLOAD_PATH=/app/uploads
      - MAX_FILE_SIZE=500MB
      - ALLOWED_FILE_TYPES=.obj,.fbx,.gltf,.glb,.dae,.3ds,.ply,.stl
      - LOG_LEVEL=info
      - RATE_LIMIT_WINDOW=15
      - RATE_LIMIT_MAX=1000
      - SENTRY_DSN=${SENTRY_DSN}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    volumes:
      - uploads:/app/uploads
      - logs:/app/logs
    networks:
      - fabrica-network
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx-prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl:ro
      - frontend_dist:/usr/share/nginx/html:ro
    networks:
      - fabrica-network
    restart: unless-stopped
    depends_on:
      - frontend
      - backend

  # PostgreSQL 数据库
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=fabrica_db
      - POSTGRES_USER=fabrica_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./fabrica-backend/scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - fabrica-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G

  # Redis 缓存
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - fabrica-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M

volumes:
  postgres_data:
  redis_data:
  uploads:
  logs:
  frontend_dist:

networks:
  fabrica-network:
    driver: bridge